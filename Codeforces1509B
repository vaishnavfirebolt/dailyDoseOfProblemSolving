import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class B {

	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
outer:		for(int tt =0 ;tt < t ; tt++) {
			int n = sc.nextInt();
			char a[] = sc.next().toCharArray();
			int tc = 0;
			int mc = 0;
			for(char ch : a) {
				if(ch == 'T') {
					tc++;
				}
				else {
					if(tc == 0) {
						System.out.println("NO");
						continue outer;
					}else {
						tc--;
						mc++;
					}
				}
			}
			int tco = 0 , mco = 0;
			for(int i = n-1 ; i >= 0 ; i--) {
				if(a[i] == 'T') {
					tco++;
				}
				else {
					if(tco == 0) {
						System.out.println("NO");
						continue outer;
					}else {
						tco--;
						mco++;
					}
				}
			}
			if(tc != mc && tco != mco) {
				System.out.println("NO");
				continue outer;
			}
			
			System.out.println("YES");
			
		}
	}
	public static void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l , Collections.reverseOrder());
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}

	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}

